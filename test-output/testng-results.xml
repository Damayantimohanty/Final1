<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="4" ignored="0" total="13" passed="9">
  <reporter-output>
  </reporter-output>
  <suite name="Mccm NBA Outbound Automation Regression Suite" duration-ms="1540859" started-at="2021-01-18T17:48:54 IST" finished-at="2021-01-18T18:14:35 IST">
    <groups>
    </groups>
    <test name="Pre Data Setup for DB Load Regression Test" duration-ms="1245" started-at="2021-01-18T17:48:54 IST" finished-at="2021-01-18T17:48:55 IST">
      <class name="Mccm.Unix.Outbound.PreDataSetup_DBLoad_Test">
        <test-method status="PASS" signature="VerifyPreDatasetupDBLoadsuccessfully()[pri:0, instance:Mccm.Unix.Outbound.PreDataSetup_DBLoad_Test@129a8472]" name="VerifyPreDatasetupDBLoadsuccessfully" duration-ms="1200" started-at="2021-01-18T17:48:54 IST" finished-at="2021-01-18T17:48:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyPreDatasetupDBLoadsuccessfully -->
      </class> <!-- Mccm.Unix.Outbound.PreDataSetup_DBLoad_Test -->
    </test> <!-- Pre Data Setup for DB Load Regression Test -->
    <test name="Unix filechk and DB loaded Regression Test" duration-ms="15324" started-at="2021-01-18T17:48:56 IST" finished-at="2021-01-18T17:49:11 IST">
      <class name="Mccm.Unix.Outbound.App_Unix_Outbound_Test">
        <test-method status="PASS" signature="VerifyDBDataLoadedSuccessfully()[pri:0, instance:Mccm.Unix.Outbound.App_Unix_Outbound_Test@3d24753a]" name="VerifyDBDataLoadedSuccessfully" duration-ms="15314" started-at="2021-01-18T17:48:56 IST" finished-at="2021-01-18T17:49:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDBDataLoadedSuccessfully -->
      </class> <!-- Mccm.Unix.Outbound.App_Unix_Outbound_Test -->
    </test> <!-- Unix filechk and DB loaded Regression Test -->
    <test name="Pre Data Setup for Valid Camp Code Regression Test" duration-ms="301308" started-at="2021-01-18T17:49:11 IST" finished-at="2021-01-18T17:54:13 IST">
      <class name="Mccm.Pega.Outbound.PegaTest.PegaPreChkValidCampCdTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.PegaPreChkValidCampCdTest@4e04a765]" name="setup" is-config="true" duration-ms="17732" started-at="2021-01-18T17:49:11 IST" finished-at="2021-01-18T17:49:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="VerifyPreCheckNBACampCodeValueValidSuccessfully()[pri:1, instance:Mccm.Pega.Outbound.PegaTest.PegaPreChkValidCampCdTest@4e04a765]" name="VerifyPreCheckNBACampCodeValueValidSuccessfully" duration-ms="282086" started-at="2021-01-18T17:49:29 IST" finished-at="2021-01-18T17:54:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyPreCheckNBACampCodeValueValidSuccessfully -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.PegaPreChkValidCampCdTest@4e04a765]" name="teardown" is-config="true" duration-ms="1481" started-at="2021-01-18T17:54:11 IST" finished-at="2021-01-18T17:54:13 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Mccm.Pega.Outbound.PegaTest.PegaPreChkValidCampCdTest -->
    </test> <!-- Pre Data Setup for Valid Camp Code Regression Test -->
    <test name="Pega Dynamic System Setting Regression Test" duration-ms="203890" started-at="2021-01-18T17:54:13 IST" finished-at="2021-01-18T17:57:37 IST">
      <class name="Mccm.Pega.Outbound.PegaTest.DataLoadDetailsTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.DataLoadDetailsTest@1e67b872]" name="setup" is-config="true" duration-ms="20273" started-at="2021-01-18T17:54:39 IST" finished-at="2021-01-18T17:54:59 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="VerifyOracleCansadraDataLoadedSuccessfully()[pri:1, instance:Mccm.Pega.Outbound.PegaTest.DataLoadDetailsTest@1e67b872]" name="VerifyOracleCansadraDataLoadedSuccessfully" duration-ms="33977" started-at="2021-01-18T17:54:59 IST" finished-at="2021-01-18T17:55:33 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Y] but found [N]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Y] but found [N]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at Mccm.Pega.Outbound.PegaMain.DataLoadDetails.DataLoadCmpltdOracle(DataLoadDetails.java:191)
at Mccm.Pega.Outbound.PegaTest.DataLoadDetailsTest.VerifyOracleCansadraDataLoadedSuccessfully(DataLoadDetailsTest.java:87)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at ExecutionUSECase.MainClass.main(MainClass.java:34)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyOracleCansadraDataLoadedSuccessfully -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.DataLoadDetailsTest@1e67b872]" name="teardown" is-config="true" duration-ms="1120" started-at="2021-01-18T17:55:33 IST" finished-at="2021-01-18T17:55:34 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Mccm.Pega.Outbound.PegaTest.DataLoadDetailsTest -->
      <class name="Mccm.Pega.Outbound.PegaTest.HomePageTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.HomePageTest@60addb54]" name="setup" is-config="true" duration-ms="20654" started-at="2021-01-18T17:55:34 IST" finished-at="2021-01-18T17:55:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="VerifyDynamicSystemSettingSuccessfully()[pri:1, instance:Mccm.Pega.Outbound.PegaTest.HomePageTest@60addb54]" name="VerifyDynamicSystemSettingSuccessfully" duration-ms="100627" started-at="2021-01-18T17:55:55 IST" finished-at="2021-01-18T17:57:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDynamicSystemSettingSuccessfully -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.HomePageTest@60addb54]" name="teardown" is-config="true" duration-ms="1230" started-at="2021-01-18T17:57:36 IST" finished-at="2021-01-18T17:57:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Mccm.Pega.Outbound.PegaTest.HomePageTest -->
      <class name="Mccm.Pega.Outbound.PegaTest.LoginPageTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.LoginPageTest@5d624da6]" name="setup" is-config="true" duration-ms="5259" started-at="2021-01-18T17:54:13 IST" finished-at="2021-01-18T17:54:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="VerifyLoginPageTitleTest()[pri:1, instance:Mccm.Pega.Outbound.PegaTest.LoginPageTest@5d624da6]" name="VerifyLoginPageTitleTest" duration-ms="8" started-at="2021-01-18T17:54:18 IST" finished-at="2021-01-18T17:54:18 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLoginPageTitleTest -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.LoginPageTest@5d624da6]" name="teardown" is-config="true" duration-ms="964" started-at="2021-01-18T17:54:18 IST" finished-at="2021-01-18T17:54:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.LoginPageTest@5d624da6]" name="setup" is-config="true" duration-ms="5260" started-at="2021-01-18T17:54:19 IST" finished-at="2021-01-18T17:54:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="VerifyPegaLogoTest()[pri:2, instance:Mccm.Pega.Outbound.PegaTest.LoginPageTest@5d624da6]" name="VerifyPegaLogoTest" duration-ms="81" started-at="2021-01-18T17:54:24 IST" finished-at="2021-01-18T17:54:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyPegaLogoTest -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.LoginPageTest@5d624da6]" name="teardown" is-config="true" duration-ms="1192" started-at="2021-01-18T17:54:24 IST" finished-at="2021-01-18T17:54:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.LoginPageTest@5d624da6]" name="setup" is-config="true" duration-ms="5211" started-at="2021-01-18T17:54:26 IST" finished-at="2021-01-18T17:54:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="VerifyLoginSuccessfulTest()[pri:3, instance:Mccm.Pega.Outbound.PegaTest.LoginPageTest@5d624da6]" name="VerifyLoginSuccessfulTest" duration-ms="6699" started-at="2021-01-18T17:54:31 IST" finished-at="2021-01-18T17:54:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyLoginSuccessfulTest -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.LoginPageTest@5d624da6]" name="teardown" is-config="true" duration-ms="1319" started-at="2021-01-18T17:54:38 IST" finished-at="2021-01-18T17:54:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Mccm.Pega.Outbound.PegaTest.LoginPageTest -->
    </test> <!-- Pega Dynamic System Setting Regression Test -->
    <test name="Pega NBACampaign Run Marketing Completed Regression Test" duration-ms="754410" started-at="2021-01-18T17:57:37 IST" finished-at="2021-01-18T18:10:11 IST">
      <class name="Mccm.Pega.Outbound.PegaTest.PegamarktingTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.PegamarktingTest@6be46e8f]" name="setup" is-config="true" duration-ms="14217" started-at="2021-01-18T17:57:37 IST" finished-at="2021-01-18T17:57:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="VerifyNBACampaignRunSuccessfully()[pri:1, instance:Mccm.Pega.Outbound.PegaTest.PegamarktingTest@6be46e8f]" name="VerifyNBACampaignRunSuccessfully" duration-ms="738628" started-at="2021-01-18T17:57:51 IST" finished-at="2021-01-18T18:10:10 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyNBACampaignRunSuccessfully -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.PegamarktingTest@6be46e8f]" name="teardown" is-config="true" duration-ms="1562" started-at="2021-01-18T18:10:10 IST" finished-at="2021-01-18T18:10:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Mccm.Pega.Outbound.PegaTest.PegamarktingTest -->
    </test> <!-- Pega NBACampaign Run Marketing Completed Regression Test -->
    <test name="Pega NBA DB Config Completed Regression Test" duration-ms="160004" started-at="2021-01-18T18:10:12 IST" finished-at="2021-01-18T18:12:52 IST">
      <class name="Mccm.Pega.Outbound.PegaTest.DBConfigValdtnTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.DBConfigValdtnTest@6b143ee9]" name="setup" is-config="true" duration-ms="24499" started-at="2021-01-18T18:10:12 IST" finished-at="2021-01-18T18:10:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="VerifyDBConfigurationCampRunidValidationSuccessfully()[pri:1, instance:Mccm.Pega.Outbound.PegaTest.DBConfigValdtnTest@6b143ee9]" name="VerifyDBConfigurationCampRunidValidationSuccessfully" duration-ms="134244" started-at="2021-01-18T18:10:36 IST" finished-at="2021-01-18T18:12:50 IST">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//span[contains(.,'PR-')]"}
  (Session info: chrome=87.0.4280.141)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: 'unknown', revision: 'unknown', time: 'unknown'
System info: host: 'INSGH045PMS0', ip: '192.168.1.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.141, chrome: {chromedriverVersion: 87.0.4280.88 (89e2380a3e36c..., userDataDir: C:\Users\prout21\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:62808}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: d071183f14e74e6e62aeaf656a72953e
*** Element info: {Using=xpath, value=//span[contains(.,'PR-')]}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//span[contains(.,'PR-')]"}
  (Session info: chrome=87.0.4280.141)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: 'unknown', revision: 'unknown', time: 'unknown'
System info: host: 'INSGH045PMS0', ip: '192.168.1.103', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 87.0.4280.141, chrome: {chromedriverVersion: 87.0.4280.88 (89e2380a3e36c..., userDataDir: C:\Users\prout21\AppData\Lo...}, goog:chromeOptions: {debuggerAddress: localhost:62808}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: d071183f14e74e6e62aeaf656a72953e
*** Element info: {Using=xpath, value=//span[contains(.,'PR-')]}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy7.getText(Unknown Source)
at Mccm.Pega.Outbound.PegaMain.DBConfigValdtn.CampRunidValidation(DBConfigValdtn.java:170)
at Mccm.Pega.Outbound.PegaTest.DBConfigValdtnTest.VerifyDBConfigurationCampRunidValidationSuccessfully(DBConfigValdtnTest.java:52)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at ExecutionUSECase.MainClass.main(MainClass.java:34)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyDBConfigurationCampRunidValidationSuccessfully -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.DBConfigValdtnTest@6b143ee9]" name="teardown" is-config="true" duration-ms="1258" started-at="2021-01-18T18:12:50 IST" finished-at="2021-01-18T18:12:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Mccm.Pega.Outbound.PegaTest.DBConfigValdtnTest -->
    </test> <!-- Pega NBA DB Config Completed Regression Test -->
    <test name="Unix Extract NBA Channel File Regression Test" duration-ms="1053" started-at="2021-01-18T18:12:52 IST" finished-at="2021-01-18T18:12:53 IST">
      <class name="Mccm.Unix.Outbound.App_Unix_Outbound_Extract_Test">
        <test-method status="FAIL" signature="VerifyExtracDataLoadedSuccessfully()[pri:0, instance:Mccm.Unix.Outbound.App_Unix_Outbound_Extract_Test@366e2eef]" name="VerifyExtracDataLoadedSuccessfully" duration-ms="1051" started-at="2021-01-18T18:12:52 IST" finished-at="2021-01-18T18:12:53 IST">
          <exception class="com.jcraft.jsch.JSchException">
            <message>
              <![CDATA[java.net.ConnectException: Connection refused: connect]]>
            </message>
            <full-stacktrace>
              <![CDATA[com.jcraft.jsch.JSchException: java.net.ConnectException: Connection refused: connect
at com.jcraft.jsch.Util.createSocket(Util.java:349)
at com.jcraft.jsch.Session.connect(Session.java:215)
at com.jcraft.jsch.Session.connect(Session.java:183)
at Mccm.Unix.Outbound.App_Unix_Outbound_Extract_Test.VerifyExtracDataLoadedSuccessfully(App_Unix_Outbound_Extract_Test.java:82)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at ExecutionUSECase.MainClass.main(MainClass.java:34)
Caused by: java.net.ConnectException: Connection refused: connect
at java.net.DualStackPlainSocketImpl.connect0(Native Method)
at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:79)
at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
at java.net.Socket.connect(Socket.java:606)
at java.net.Socket.connect(Socket.java:555)
at java.net.Socket.<init>(Socket.java:451)
at java.net.Socket.<init>(Socket.java:228)
at com.jcraft.jsch.Util.createSocket(Util.java:343)
... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- com.jcraft.jsch.JSchException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyExtracDataLoadedSuccessfully -->
      </class> <!-- Mccm.Unix.Outbound.App_Unix_Outbound_Extract_Test -->
    </test> <!-- Unix Extract NBA Channel File Regression Test -->
    <test name="Pega Generated Extract Channel File Regression Test" duration-ms="53400" started-at="2021-01-18T18:12:53 IST" finished-at="2021-01-18T18:13:46 IST">
      <class name="Mccm.Pega.Outbound.PegaTest.ExtractChannelFileTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.ExtractChannelFileTest@5a61f5df]" name="setup" is-config="true" duration-ms="24515" started-at="2021-01-18T18:12:53 IST" finished-at="2021-01-18T18:13:17 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="VerifyExtractChannelFileCheckSuccessfully()[pri:1, instance:Mccm.Pega.Outbound.PegaTest.ExtractChannelFileTest@5a61f5df]" name="VerifyExtractChannelFileCheckSuccessfully" duration-ms="27431" started-at="2021-01-18T18:13:17 IST" finished-at="2021-01-18T18:13:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyExtractChannelFileCheckSuccessfully -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.ExtractChannelFileTest@5a61f5df]" name="teardown" is-config="true" duration-ms="1449" started-at="2021-01-18T18:13:45 IST" finished-at="2021-01-18T18:13:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Mccm.Pega.Outbound.PegaTest.ExtractChannelFileTest -->
    </test> <!-- Pega Generated Extract Channel File Regression Test -->
    <test name="Pega NBACampaign Batch Process Completed Regression Test" duration-ms="48577" started-at="2021-01-18T18:13:46 IST" finished-at="2021-01-18T18:14:35 IST">
      <class name="Mccm.Pega.Outbound.PegaTest.NBAOutboundValdtnTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.NBAOutboundValdtnTest@737996a0]" name="setup" is-config="true" duration-ms="20295" started-at="2021-01-18T18:13:46 IST" finished-at="2021-01-18T18:14:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="VerifyNBABatchProcessCompletedSuccessfully()[pri:1, instance:Mccm.Pega.Outbound.PegaTest.NBAOutboundValdtnTest@737996a0]" name="VerifyNBABatchProcessCompletedSuccessfully" duration-ms="27092" started-at="2021-01-18T18:14:07 IST" finished-at="2021-01-18T18:14:34 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [PR-19376] but found [PR-19335]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [PR-19376] but found [PR-19335]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at Mccm.Pega.Outbound.PegaMain.NBAOutboundValdtn.CampRUNid(NBAOutboundValdtn.java:192)
at Mccm.Pega.Outbound.PegaTest.NBAOutboundValdtnTest.VerifyNBABatchProcessCompletedSuccessfully(NBAOutboundValdtnTest.java:52)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at ExecutionUSECase.MainClass.main(MainClass.java:34)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyNBABatchProcessCompletedSuccessfully -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.NBAOutboundValdtnTest@737996a0]" name="teardown" is-config="true" duration-ms="1188" started-at="2021-01-18T18:14:34 IST" finished-at="2021-01-18T18:14:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Mccm.Pega.Outbound.PegaTest.NBAOutboundValdtnTest -->
    </test> <!-- Pega NBACampaign Batch Process Completed Regression Test -->
  </suite> <!-- Mccm NBA Outbound Automation Regression Suite -->
</testng-results>
