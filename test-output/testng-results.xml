<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="10" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Mccm NBA Outbound Automation Regression Suite" duration-ms="1609620" started-at="2021-06-11T17:41:07 IST" finished-at="2021-06-11T18:07:57 IST">
    <groups>
    </groups>
    <test name="Pre Data Setup for Valid Camp Code Regression Test" duration-ms="319003" started-at="2021-06-11T17:41:07 IST" finished-at="2021-06-11T17:46:26 IST">
      <class name="Mccm.Pega.Outbound.PegaTest.PegaPreChkValidCampCdTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.PegaPreChkValidCampCdTest@c81cdd1]" name="setup" is-config="true" duration-ms="11815" started-at="2021-06-11T17:41:07 IST" finished-at="2021-06-11T17:41:19 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="VerifyOutboundPreCheckNBACampCodeValueValidSuccessfully()[pri:1, instance:Mccm.Pega.Outbound.PegaTest.PegaPreChkValidCampCdTest@c81cdd1]" name="VerifyOutboundPreCheckNBACampCodeValueValidSuccessfully" duration-ms="305850" started-at="2021-06-11T17:41:19 IST" finished-at="2021-06-11T17:46:25 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyOutboundPreCheckNBACampCodeValueValidSuccessfully -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.PegaPreChkValidCampCdTest@c81cdd1]" name="teardown" is-config="true" duration-ms="1261" started-at="2021-06-11T17:46:25 IST" finished-at="2021-06-11T17:46:26 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Mccm.Pega.Outbound.PegaTest.PegaPreChkValidCampCdTest -->
    </test> <!-- Pre Data Setup for Valid Camp Code Regression Test -->
    <test name="Pega Dynamic System Setting Regression Test" duration-ms="184530" started-at="2021-06-11T17:46:26 IST" finished-at="2021-06-11T17:49:31 IST">
      <class name="Mccm.Pega.Outbound.PegaTest.DataLoadDetailsTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.DataLoadDetailsTest@78186a70]" name="setup" is-config="true" duration-ms="18515" started-at="2021-06-11T17:46:50 IST" finished-at="2021-06-11T17:47:08 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="VerifyOutboundOracleCansadraDataLoadedSuccessfully()[pri:1, instance:Mccm.Pega.Outbound.PegaTest.DataLoadDetailsTest@78186a70]" name="VerifyOutboundOracleCansadraDataLoadedSuccessfully" duration-ms="42935" started-at="2021-06-11T17:47:08 IST" finished-at="2021-06-11T17:47:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyOutboundOracleCansadraDataLoadedSuccessfully -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.DataLoadDetailsTest@78186a70]" name="teardown" is-config="true" duration-ms="1114" started-at="2021-06-11T17:47:51 IST" finished-at="2021-06-11T17:47:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Mccm.Pega.Outbound.PegaTest.DataLoadDetailsTest -->
      <class name="Mccm.Pega.Outbound.PegaTest.HomePageTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.HomePageTest@306279ee]" name="setup" is-config="true" duration-ms="16413" started-at="2021-06-11T17:47:53 IST" finished-at="2021-06-11T17:48:09 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="VerifyOutboundDynamicSystemSettingSuccessfully()[pri:1, instance:Mccm.Pega.Outbound.PegaTest.HomePageTest@306279ee]" name="VerifyOutboundDynamicSystemSettingSuccessfully" duration-ms="80723" started-at="2021-06-11T17:48:09 IST" finished-at="2021-06-11T17:49:30 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyOutboundDynamicSystemSettingSuccessfully -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.HomePageTest@306279ee]" name="teardown" is-config="true" duration-ms="1181" started-at="2021-06-11T17:49:30 IST" finished-at="2021-06-11T17:49:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Mccm.Pega.Outbound.PegaTest.HomePageTest -->
      <class name="Mccm.Pega.Outbound.PegaTest.LoginPageTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.LoginPageTest@481a15ff]" name="setup" is-config="true" duration-ms="4766" started-at="2021-06-11T17:46:26 IST" finished-at="2021-06-11T17:46:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="VerifyPegaApplicationLoginPageTitleTest()[pri:1, instance:Mccm.Pega.Outbound.PegaTest.LoginPageTest@481a15ff]" name="VerifyPegaApplicationLoginPageTitleTest" duration-ms="7" started-at="2021-06-11T17:46:31 IST" finished-at="2021-06-11T17:46:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyPegaApplicationLoginPageTitleTest -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.LoginPageTest@481a15ff]" name="teardown" is-config="true" duration-ms="1070" started-at="2021-06-11T17:46:31 IST" finished-at="2021-06-11T17:46:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.LoginPageTest@481a15ff]" name="setup" is-config="true" duration-ms="4309" started-at="2021-06-11T17:46:32 IST" finished-at="2021-06-11T17:46:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="VerifyPegaApplicationPegaLogoTest()[pri:2, instance:Mccm.Pega.Outbound.PegaTest.LoginPageTest@481a15ff]" name="VerifyPegaApplicationPegaLogoTest" duration-ms="77" started-at="2021-06-11T17:46:36 IST" finished-at="2021-06-11T17:46:37 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyPegaApplicationPegaLogoTest -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.LoginPageTest@481a15ff]" name="teardown" is-config="true" duration-ms="1083" started-at="2021-06-11T17:46:37 IST" finished-at="2021-06-11T17:46:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.LoginPageTest@481a15ff]" name="setup" is-config="true" duration-ms="4206" started-at="2021-06-11T17:46:38 IST" finished-at="2021-06-11T17:46:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="VerifyPegaApplicationLoginSuccessfulTest()[pri:3, instance:Mccm.Pega.Outbound.PegaTest.LoginPageTest@481a15ff]" name="VerifyPegaApplicationLoginSuccessfulTest" duration-ms="7014" started-at="2021-06-11T17:46:42 IST" finished-at="2021-06-11T17:46:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyPegaApplicationLoginSuccessfulTest -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.LoginPageTest@481a15ff]" name="teardown" is-config="true" duration-ms="1074" started-at="2021-06-11T17:46:49 IST" finished-at="2021-06-11T17:46:50 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Mccm.Pega.Outbound.PegaTest.LoginPageTest -->
    </test> <!-- Pega Dynamic System Setting Regression Test -->
    <test name="Pega NBACampaign Run Marketing Completed Regression Test" duration-ms="849321" started-at="2021-06-11T17:49:31 IST" finished-at="2021-06-11T18:03:40 IST">
      <class name="Mccm.Pega.Outbound.PegaTest.PegamarktingTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.PegamarktingTest@704921a5]" name="setup" is-config="true" duration-ms="9521" started-at="2021-06-11T17:49:31 IST" finished-at="2021-06-11T17:49:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="VerifyOutboundNBACampaignRunSuccessfully()[pri:1, instance:Mccm.Pega.Outbound.PegaTest.PegamarktingTest@704921a5]" name="VerifyOutboundNBACampaignRunSuccessfully" duration-ms="838296" started-at="2021-06-11T17:49:40 IST" finished-at="2021-06-11T18:03:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyOutboundNBACampaignRunSuccessfully -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.PegamarktingTest@704921a5]" name="teardown" is-config="true" duration-ms="1503" started-at="2021-06-11T18:03:39 IST" finished-at="2021-06-11T18:03:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Mccm.Pega.Outbound.PegaTest.PegamarktingTest -->
    </test> <!-- Pega NBACampaign Run Marketing Completed Regression Test -->
    <test name="Pega NBA DB Config Completed Regression Test" duration-ms="121051" started-at="2021-06-11T18:03:40 IST" finished-at="2021-06-11T18:05:41 IST">
      <class name="Mccm.Pega.Outbound.PegaTest.DBConfigValdtnTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.DBConfigValdtnTest@5579bb86]" name="setup" is-config="true" duration-ms="24936" started-at="2021-06-11T18:03:40 IST" finished-at="2021-06-11T18:04:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="VerifyOutboundDBConfigurationCampRunidValidationSuccessfully()[pri:1, instance:Mccm.Pega.Outbound.PegaTest.DBConfigValdtnTest@5579bb86]" name="VerifyOutboundDBConfigurationCampRunidValidationSuccessfully" duration-ms="94778" started-at="2021-06-11T18:04:05 IST" finished-at="2021-06-11T18:05:40 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [PR-28695] but found [PR-28681]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [PR-28695] but found [PR-28681]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at Mccm.Pega.Outbound.PegaMain.DBConfigValdtn.CampRunidValidation(DBConfigValdtn.java:190)
at Mccm.Pega.Outbound.PegaTest.DBConfigValdtnTest.VerifyOutboundDBConfigurationCampRunidValidationSuccessfully(DBConfigValdtnTest.java:52)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyOutboundDBConfigurationCampRunidValidationSuccessfully -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.DBConfigValdtnTest@5579bb86]" name="teardown" is-config="true" duration-ms="1335" started-at="2021-06-11T18:05:40 IST" finished-at="2021-06-11T18:05:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Mccm.Pega.Outbound.PegaTest.DBConfigValdtnTest -->
    </test> <!-- Pega NBA DB Config Completed Regression Test -->
    <test name="Pega Generated Extract Channel File Regression Test" duration-ms="67038" started-at="2021-06-11T18:05:41 IST" finished-at="2021-06-11T18:06:49 IST">
      <class name="Mccm.Pega.Outbound.PegaTest.ExtractChannelFileTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.ExtractChannelFileTest@b3d7190]" name="setup" is-config="true" duration-ms="18018" started-at="2021-06-11T18:05:42 IST" finished-at="2021-06-11T18:06:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="VerifyOutboundExtractChannelFileCheckSuccessfully()[pri:1, instance:Mccm.Pega.Outbound.PegaTest.ExtractChannelFileTest@b3d7190]" name="VerifyOutboundExtractChannelFileCheckSuccessfully" duration-ms="47840" started-at="2021-06-11T18:06:00 IST" finished-at="2021-06-11T18:06:47 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyOutboundExtractChannelFileCheckSuccessfully -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.ExtractChannelFileTest@b3d7190]" name="teardown" is-config="true" duration-ms="1157" started-at="2021-06-11T18:06:47 IST" finished-at="2021-06-11T18:06:49 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Mccm.Pega.Outbound.PegaTest.ExtractChannelFileTest -->
    </test> <!-- Pega Generated Extract Channel File Regression Test -->
    <test name="Pega NBACampaign Batch Process Completed Regression Test" duration-ms="67876" started-at="2021-06-11T18:06:49 IST" finished-at="2021-06-11T18:07:57 IST">
      <class name="Mccm.Pega.Outbound.PegaTest.NBAOutboundValdtnTest">
        <test-method status="PASS" signature="setup()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.NBAOutboundValdtnTest@68ceda24]" name="setup" is-config="true" duration-ms="17932" started-at="2021-06-11T18:06:49 IST" finished-at="2021-06-11T18:07:07 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="VerifyOutboundNBABatchProcessCompletedSuccessfully()[pri:1, instance:Mccm.Pega.Outbound.PegaTest.NBAOutboundValdtnTest@68ceda24]" name="VerifyOutboundNBABatchProcessCompletedSuccessfully" duration-ms="48692" started-at="2021-06-11T18:07:07 IST" finished-at="2021-06-11T18:07:55 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [PR-28695] but found [PR-28683]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [PR-28695] but found [PR-28683]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at Mccm.Pega.Outbound.PegaMain.NBAOutboundValdtn.CampRUNid(NBAOutboundValdtn.java:194)
at Mccm.Pega.Outbound.PegaTest.NBAOutboundValdtnTest.VerifyOutboundNBABatchProcessCompletedSuccessfully(NBAOutboundValdtnTest.java:52)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:821)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:767)
at org.testng.TestRunner.run(TestRunner.java:588)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1214)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1136)
at org.testng.TestNG.runSuites(TestNG.java:1066)
at org.testng.TestNG.run(TestNG.java:1034)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyOutboundNBABatchProcessCompletedSuccessfully -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Mccm.Pega.Outbound.PegaTest.NBAOutboundValdtnTest@68ceda24]" name="teardown" is-config="true" duration-ms="1249" started-at="2021-06-11T18:07:55 IST" finished-at="2021-06-11T18:07:57 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Mccm.Pega.Outbound.PegaTest.NBAOutboundValdtnTest -->
    </test> <!-- Pega NBACampaign Batch Process Completed Regression Test -->
  </suite> <!-- Mccm NBA Outbound Automation Regression Suite -->
</testng-results>
